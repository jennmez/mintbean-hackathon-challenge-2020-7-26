{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Welcome.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { onMount } from 'svelte';\n  let state = 'welcome'; // 'playing'\n  let difficulty;\n  let numOfQuestions;\n  let category;\n  let questionsPromise;\n  let questions;\n  let score;\n  let trivia;\n  let answers;\n\n  const proxyURL = 'https://cors-anywhere.herokuapp.com/';\n  const api = {\n    key: process.env.QUIZ_API_KEY,\n    baseURL: 'https://quizapi.io/api/v1/',\n  };\n\n  const loadQuestions = async () => {\n    try {\n      trivia = [];\n      answers = [];\n      score = 0;\n      let response = await fetch(\n        `${proxyURL}${api.baseURL}questions?apiKey=${api.key}&category=${category}&difficulty=${difficulty}&limit=${numOfQuestions}`\n      );\n      questions = await response.json();\n      console.log(questions);\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    loadQuestions();\n    console.log(difficulty, numOfQuestions, category);\n    state = 'playing';\n  };\n\n  // onMount(() => {\n  //   questionsPromise = loadQuestions();\n  // });\n</script>\n\n<style>\n  main {\n    text-align: center;\n    padding: 1em;\n    max-width: 800x;\n    margin: 0 auto;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n  }\n  h1 {\n    color: #bc1a96;\n    text-transform: uppercase;\n    font-size: 4em;\n    font-weight: 200;\n  }\n  p {\n    color: #2b2b2b;\n    font-size: 1.5em;\n    font-weight: 100;\n    max-width: 24em;\n    margin: 0 auto 1em auto;\n  }\n  button {\n    background-color: #bc1a96;\n  }\n</style>\n\n<main>\n  <header>\n    <h1>PROGRAMMING TRIVIA</h1>\n  </header>\n  {#if state === 'welcome'}\n    <p>\n      So you think you know technology? Prove it! Select a category, number of\n      questions, difficulty level and let's find out!\n    </p>\n    <form on:submit={handleSubmit}>\n      <select bind:value={difficulty}>\n        <option value=\"Easy\">Easy</option>\n        <option value=\"Medium\">Medium</option>\n        <option value=\"Hard\">Hard</option>\n      </select>\n      <select bind:value={category}>\n        <option value=\"devops\">DevOps</option>\n        <option value=\"code\">Code</option>\n        <option value=\"docker\">Docker</option>\n        <option value=\"mySQL\">MySQL</option>\n      </select>\n      <select bind:value={numOfQuestions}>\n        <option value=\"5\">5</option>\n        <option value=\"10\">10</option>\n        <option value=\"15\">15</option>\n        <option value=\"20\">20</option>\n      </select>\n      <button type=\"submit\">Start Game</button>\n    </form>\n  {:else if state === 'playing'}\n    <p>game screen here</p>\n  {/if}\n</main>\n\n<!--<script>\n//   import Welcome from './components/Welcome.svelte';\n//   let state = 'welcome'; // 'playing'\n//   import { onMount } from 'svelte';\n//   // import { getQuestions } from './api';\n//   // import { userAnswers } from './stores';\n//   let questions = [];\n//   let userAnswers = [];\n\n//   const proxyURL = 'https://cors-anywhere.herokuapp.com/';\n//   const api = {\n//     key: process.env.QUIZ_API_KEY,\n//     baseURL: 'https://quizapi.io/api/v1/',\n//   };\n\n//   onMount(async function loadQuestions() {\n//     try {\n//       let response = await fetch(\n//         `${proxyURL}${api.baseURL}questions?apiKey=${api.key}&category=code&difficulty=${difficultyLevel}&limit==${numOfQuestions}&tags=${category}`\n//       );\n//       questions = await response.json();\n//       console.log(questions);\n//     } catch (err) {\n//       alert(err);\n//     }\n//   });\n\n\n// </script>//<style>\n//   main {\n//     text-align: center;\n//     padding: 1em;\n//     max-width: 800x;\n//     margin: 0 auto;\n//     height: 100%;\n//     display: flex;\n//     flex-direction: column;\n//     justify-content: center;\n//   }\n// </style>// <main>\n//   {#if state === 'welcome'}\n//     <Welcome />\n//   {:else if state === 'playing'}\n//     <p>game screen here</p>\n//   {/if}\n// </main>\n\n//  <main>\n//   <h1>HTML Interview Questions</h1>\n//   <h6>\n//     Just started learning HTML? Test your knowledge by answering these 5 common\n//     interview questions!\n//   </h6>\n//   {#each questions as question}\n//     <div>\n//       <p>{question.question}</p>\n//       <div class=\"answers\">\n//         <button on:click={() => handleClick(question.answers.answer_a)}>\n//           {question.answers.answer_a}\n//         </button>\n//         <button on:click={() => handleClick(question.answers.answer_b)}>\n//           {question.answers.answer_b}\n//         </button>\n//         <button on:click={() => handleClick(question.answers.answer_c)}>\n//           {question.answers.answer_c}\n//         </button>\n//         <button on:click={() => handleClick(question.answers.answer_d)}>\n//           {question.answers.answer_d}\n//         </button>\n//       </div>\n//     </div>\n//   {:else}\n//     <p>loading...</p>\n//   {/each}\n// </main> -->\n",
    "<style>\n  h1 {\n    color: #bc1a96;\n    text-transform: uppercase;\n    font-size: 4em;\n    font-weight: 200;\n  }\n  p {\n    color: #2b2b2b;\n    font-size: 1.5em;\n    font-weight: 100;\n    max-width: 24em;\n    margin: 0 auto 1em auto;\n  }\n</style>\n\n<header>\n  <h1>HTML TRIVIA</h1>\n  <p>\n    Just started learning HTML? Test your knowledge by answering common\n    interview questions!\n  </p>\n</header>\n"
  ],
  "names": [],
  "mappings": "AA8CE,IAAI,cAAC,CAAC,AACJ,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,eAAe,CAAE,MAAM,AACzB,CAAC,AACD,EAAE,cAAC,CAAC,AACF,KAAK,CAAE,OAAO,CACd,cAAc,CAAE,SAAS,CACzB,SAAS,CAAE,GAAG,CACd,WAAW,CAAE,GAAG,AAClB,CAAC,AACD,CAAC,cAAC,CAAC,AACD,KAAK,CAAE,OAAO,CACd,SAAS,CAAE,KAAK,CAChB,WAAW,CAAE,GAAG,CAChB,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,AACzB,CAAC,AACD,MAAM,cAAC,CAAC,AACN,gBAAgB,CAAE,OAAO,AAC3B,CAAC;ACtED,EAAE,cAAC,CAAC,AACF,KAAK,CAAE,OAAO,CACd,cAAc,CAAE,SAAS,CACzB,SAAS,CAAE,GAAG,CACd,WAAW,CAAE,GAAG,AAClB,CAAC,AACD,CAAC,cAAC,CAAC,AACD,KAAK,CAAE,OAAO,CACd,SAAS,CAAE,KAAK,CAChB,WAAW,CAAE,GAAG,CAChB,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,AACzB,CAAC"
}